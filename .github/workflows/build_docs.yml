---
# Copyright 2022 Sam Darwin
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

name: build_docs

on:
  pull_request:
    paths:
      - 'build_docs/**'
  push:
    paths:
      - 'build_docs/**'
    branches:
      - master
      - develop
      - feature/**

jobs:
  linux:
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            container: ubuntu:22.04
            packages: python2
            skiplist: auto_index
          # - os: ubuntu-latest
          #   container: ubuntu:20.04
          #   packages: python
          #   skiplist: auto_index
          - os: ubuntu-latest
            container: ubuntu:22.04
            packages: python2
            # skiplist:
            flags: "--boostrelease"
          # - os: ubuntu-latest
          #   container: ubuntu:20.04
          #   packages: python
          #   # skiplist:
          #   flags: "--boostrelease"
          #   # Jinja 3.1.0 and later have dropped support for Python 3.6 and therefore won't run on Ubuntu 18.04. Removing tests for Ubuntu 18.

    timeout-minutes: 720
    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}

    steps:

      - uses: actions/checkout@v2

      - name: docs
        run: |
            set -x
            set -e
            apt-get update
            DEBIAN_FRONTEND="noninteractive" apt-get install -y tzdata
            apt-get install -y git sudo
            apt-get install -y ${{ matrix.packages }}
            if [ ! -f /usr/bin/python ]; then
                ln -s /usr/bin/python2 /usr/bin/python
            fi

            cp build_docs/linuxdocs.sh /usr/local/bin/

            mkdir -p /opt/github/boostorg
            cd /opt/github/boostorg
            git clone -b "develop" --depth 1 "https://github.com/boostorg/boost.git"
            cd boost
            git submodule update --init

            # Run at least one full build that installs everything
            cd libs/accumulators
            linuxdocs.sh ${{ matrix.flags }}
            cd ../..

            textpart1='#!/bin/bash
            reponame=$1
            echo "reponame is $reponame"
            skiplist="'

            textpart2="${{ matrix.skiplist }}"

            textpart3='"
            # jump ahead to continue testing

            # if [[ "$reponame" =~ ^[a-fh-z] ]]; then
            if [[ "$reponame" =~ ^[9] ]]; then
               echo "skipping ahead X letters"
            elif [[ "$skiplist" =~ $reponame ]]; then
                echo "repo in skiplist"
            else
                linuxdocs.sh --quick '

            textpart4=${{ matrix.flags }}
            textpart5='
                if [[ $? != 0 ]]; then
                    echo "..failed. DOCS BUILD FAILED. LIBRARY $reponame"
                else
                    echo "LIBRARY $reponame SUCCEEDED."
                fi
            fi
            '

            textsource="${textpart1}${textpart2}${textpart3}${textpart4}${textpart5}"
            echo "$textsource" > /usr/local/bin/runlinuxdocsquick
            chmod 755 /usr/local/bin/runlinuxdocsquick
            echo "checking runlinuxdocsquick"
            cat /usr/local/bin/runlinuxdocsquick

            git submodule foreach 'runlinuxdocsquick $name'
